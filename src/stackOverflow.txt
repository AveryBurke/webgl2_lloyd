q: webgl2 read from a texture and write the output to a second texture

I have two programs. Program 1 renders my favorite triangle, in my favortie color, into a texture, for safe keeping.

///code example?////

Program 2 reads the output of program 1 (the first texture) and then renders the conents of that texture.

///code example?//

This works fine when program 2 renders to the canvas, but I would like program 2 to render to a second texture. 
So I unbind the first fbo, create another one backed by a second texture, and then draw.

///code example///////////////////////////

....
//unbind frame buffer
gl.bindFramebuffer(gl.FRAMEBUFFER,null)

gl.useProgram(program2)

....

//create second frame buffer object
const fbo2 = gl.createFramebuffer()
gl.bindFramebuffer(gl.FRAMEBUFFER, fbo2)
//// create second texture
const intermediateTexture = createEmptyTexture(gl,gl.canvas.width,gl.canvas.height,mipLevel)
gl.framebufferTexture2D(
    gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, intermediateTexture, mipLevel)

gl.viewport(0,0,gl.canvas.width,gl.canvas.height)
gl.drawArrays(gl.TRIANGLES, 0, 6)

////////////////////////////////////////////////////////

This produces the following error: `:GL_INVALID_OPERATION : glDrawArrays: Source and destination textures of the draw are the same.`

My interpretation of this errror is taht program 2 is reading from, and writing to, the same texture. I think the problem is that I haven't told program 2 which texture to read from.
But I don't know how to tell program 2 to read from the texture in fb1, after that frame buffer has been unbound.

How do I get program 2 to draw to the second texture?

Thank you so much for your help

/////fulll code///////////////////
